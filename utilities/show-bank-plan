#!/bin/sh

usage() {
cat <<EOH
Shows the current bank plan, and determines if it is optimal or not.

Usage: $0

Options:
 -q Quiet mode (no messages)

EOH
exit
}

QUIET=N

while getopts :q option; do
  case "${option}" in
    q) QUIET=Y;;
    *) usage;;
  esac
done

GREEN='\033[1;32m'
ORANGE='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color
FMT=" -> ${ORANGE}%-16s${NC} : %s "

OPTIMAL=0

test_optimal() {
  local actual="$1"
  local expected="$2"
  if [ "$actual" = "$expected" ]; then
    OPTIMAL=$(( $OPTIMAL + 1 ))
    [ $QUIET = N ] && echo -e "${GREEN} OK${NC}"
  else
    [ $QUIET = N ] && echo -e "${RED} !! [Should be ${expected}]${NC}"
  fi
}

handle_content() {
  local config="$1"
  local content="$2"
  [ $QUIET = N ] && printf "$FMT" "$config" "$content"
  if [ "$config" = "active" ]; then
    test_optimal "$content" bank_1
  elif [ "$config" = "booted" ]; then
    test_optimal "$content" bank_2
  else
    [ $QUIET = N ] && echo
  fi
}

if [ -d /proc/banktable ]; then
  BANKTABLE=Y
  for f in $(find /proc/banktable -type f | sort); do
    handle_content "$(basename $f)" "$(cat $f)"
  done
else
  BANKTABLE=N
  for f in active:partition:active activeversion:tchversion:active booted:partition:booted bootedversion:version:booted inactive:partition:passive notbooted:partition:notbooted notbootedversion:version:notbooted passiveversion:tchversion:passive; do
    set -- $(echo $f | tr ':' ' ')
    CONTENT=$(bootmgr $2 $3 2>/dev/null | grep -v rd_metadata)
    [ "$CONTENT" = "1" -o "$CONTENT" = "2" ] && CONTENT="bank_$CONTENT"
    [ "$1" = activeversion -a -z "$CONTENT" ] && CONTENT=$(uci -q get env.var.friendly_sw_version_activebank)
    [ "$1" = passiveversion -a -z "$CONTENT" ] && CONTENT=$(uci -q get env.var.friendly_sw_version_passivebank)
    [ -z "$CONTENT" ] && CONTENT="Unknown"
    [ $QUIET = N ] && printf "${FMT}\n" "$1" "$CONTENT"
  done
fi

[ $QUIET = N ] && echo

if [ $QUIET = N -a -e /usr/lib/lua/processvendorinfo.lua ]; then
  if grep -q acsurl /usr/lib/lua/processvendorinfo.lua; then
    echo -e " == Booted firmware is ${GREEN}VULNERABLE${NC} to tch-exploit${NC} ==\n"
  else
    echo -e " !! ${ORANGE}WARNING${NC}: Booted firmware is ${RED}NOT VULNERABLE${NC} to tch-exploit${NC} !!\n"
  fi
fi

if [ $OPTIMAL -eq 2 ]; then
  [ $QUIET = N ] && echo -e " == Bank Plan is ${GREEN}OPTIMAL${NC} ==\n"
  exit 0
else
  if [ $QUIET = N ]; then
    if [ $BANKTABLE = Y ]; then
      echo -e " !! Bank Plan is ${RED}NOT OPTIMAL${NC} !!\n"
      echo
      echo "Run the following command:"
      echo
      echo -e "${ORANGE}  ./set-optimal-bank-plan${NC}"
      echo
      echo "or manually follow the instructions at:"
      echo "https://hack-technicolor.readthedocs.io/en/stable/Hacking/PostRoot/#bank-planning"
      echo
      echo "NOTE: If you are unable to set an optimal bank plan, you may need to do a complete"
      echo "      reset of the device using the following command:"
      echo
      echo "       mtd -r erase rootfs_data"
      echo
      echo "      The device will reboot, and you WILL lose root, but you will be able to set"
      echo "      the optimal bank plan after re-acquiring root."
      echo
    else
      echo -e " !! Optimal Bank Plan can ${RED}NOT${NC} be applied to this device !!\n"
    fi
  fi
  exit 1
fi
